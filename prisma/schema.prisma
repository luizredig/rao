generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Occurrence {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  categoryId       String         @db.ObjectId
  category         Category       @relation(fields: [categoryId], references: [id])
  tagsIds          String[]       @db.ObjectId
  tags             Tag[]          @relation(fields: [tagsIds], references: [id])
  userId           String         @db.ObjectId
  user             User           @relation(fields: [userId], references: [id])
  participantsIds  String[]
  statusId         String         @db.ObjectId
  status           Status         @relation(fields: [statusId], references: [id])
  anonymous        Boolean
  description      String
  attachments      Attachment[]
  classificationId String         @db.ObjectId
  classification   Classification @relation(fields: [classificationId], references: [id])
  date             DateTime
  locationId       String         @db.ObjectId
  location         Location       @relation(fields: [locationId], references: [id])
}

model Category {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  occurrences Occurrence[]
}

model Tag {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  occurencesIds String[]     @db.ObjectId
  occurrences   Occurrence[] @relation(fields: [occurencesIds], references: [id])
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  roleId      String       @db.ObjectId
  role        Role         @relation(fields: [roleId], references: [id])
  email       String       @unique
  password    String
  occurrences Occurrence[]
}

model Role {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  users User[]
}

model Status {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  occurrences Occurrence[]
}

model Attachment {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  attachmentTypeId String         @db.ObjectId
  attachmentType   AttachmentType @relation(fields: [attachmentTypeId], references: [id])
  occurrenceId     String         @db.ObjectId
  occurrence       Occurrence     @relation(fields: [occurrenceId], references: [id])
}

model AttachmentType {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  description String
  attachments Attachment[]
}

model Classification {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  approved    Boolean
  description String
  occurrences Occurrence[]
}

model Location {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  description  String
  occurrencces Occurrence[]
}
